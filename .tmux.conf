# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
# bind s split-window -v
# bind v split-window -h

set-option -g history-limit 4000

set -s escape-time 0

# set status-utf8 on
# set utf8 on
set -g default-terminal "xterm-256color"

set -g status-bg black
set -g status-fg white

# set -g status off

set -g pane-border-fg black
set -g pane-active-border-fg yellow
set -g pane-active-border-bg default

# new prefix key
unbind C-b
set -g prefix C-Y
bind C-Y send-prefix

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r M-h resize-pane -L 3
bind -r M-j resize-pane -D 3
bind -r M-k resize-pane -U 3
bind -r M-l resize-pane -R 3

bind -n -r C-M-h resize-pane -L 3
bind -n -r C-M-j resize-pane -D 3
bind -n -r C-M-k resize-pane -U 3
bind -n -r C-M-l resize-pane -R 3

# enable mouse selection
set -g mouse on

# Sane scrolling
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# Force reload of config file
unbind r
bind r source-file ~/.tmux.conf

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# =============
# my bindings
# =============
bind T choose-tree

# vim-like copy mode
unbind [
unbind ]
bind Escape copy-mode
# bind-key -n C-] copy-mode\; send-keys "H"
bind-key -n C-] copy-mode \; send-keys -X begin-selection
unbind p
bind p paste-buffer
# bind -n M-P paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# To copy:
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c "
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c "
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c "

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'""''""""''"""

# tab-switcher for vim
set-option -gw xterm-keys on

# lazy typer
bind-key -n M-a send-keys "ls " #Enter
bind-key -n M-b run '~/scripts/copy_vim_filename'
bind-key -n M-c send-keys "cal 2017" Enter
bind-key -n M-d send-keys "df -h" Enter
bind-key -n M-e send-keys "{access,error}"
bind-key -n M-f send-keys "find "
bind-key -n M-g send-keys "getent passwd | grep -i "
bind-key -n M-h send-keys "gT"
bind-key -n M-i send-keys "set -o vi" Enter
bind-key -n M-l send-keys "gt"
# bind-key -n M-m send-keys ""
# bind-key -n M-n send-keys ""
bind-key -n M-o send-keys ":tabe "
bind-key -n M-p send-keys 'pdfgrep "" *.pdf' Escape 'F";a'
bind-key -n M-q send-keys "youtube-dl --extract-audio --audio-format mp3 --audio-quality 0 \'" 
# bind-key -n M-r send-keys ""
bind-key -n M-s send-keys "ssh "
bind-key -n M-t send-keys "tree -phfugaDCL 3" 
bind-key -n M-u send-keys "/etc/apache2/sites-enabled/"
bind-key -n M-v send-keys "vim "
bind-key -n M-w send-keys "which "
bind-key -n M-x send-keys "shutdown +"
bind-key -n M-y send-keys "systemctl "
bind-key -n M-z send-keys "du -shx *" 

bind-key -n M-A send-keys "ls -lahp " #Enter
# bind-key -n M-B send-keys ""
bind-key -n M-C new-window
bind-key -n M-D send-keys "lsblk" Enter
bind-key -n M-E split-window -p 25 -b -c '#{pane_current_path}'
# bind-key -n M-F send-keys ""
bind-key -n M-F split-window -h -p 33 -c '#{pane_current_path}'
bind-key -n M-G send-keys "getfacl ." Enter
bind-key -n M-H select-pane -L
# bind-key -n M-I send-keys ""
bind-key -n M-J select-pane -D
bind-key -n M-K select-pane -U
bind-key -n M-L select-pane -R
# bind-key -n M-M send-keys ""
bind-key -n M-N select-pane -l
bind-key -n M-N send-keys "cat \$HISTFILE | awk '/^#/{printf \"[%s] \", strftime(\"%F, %T\", substr($0,2));next};1' | vim -" Enter "G"
bind-key -n M-O send-keys "puppet agent -t" Enter
bind-key -n M-P run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
# bind-key -n M-Q send-keys ""
# bind-key -n M-R 
# bind-key -n M-R send-keys ""
bind-key -n M-S split-window -c '#{pane_current_path}'
bind-key -n M-T send-keys "tree -phfugaDCL 4 | less -r"
bind-key -n M-U send-keys "/var/log/apache2/"
bind-key -n M-V split-window -h -c '#{pane_current_path}'
bind-key -n M-W split-window -p 20 -c '#{pane_current_path}'
bind-key -n M-X kill-pane

# bind-key -n C-M-a 
# bind-key -n C-M-b
# bind-key -n C-M-c
# bind-key -n C-M-d
# bind-key -n C-M-e
# bind-key -n C-M-f
# bind-key -n C-M-g
# bind-key -n C-M-h
# bind-key -n C-M-i
# bind-key -n C-M-j
# bind-key -n C-M-k
# bind-key -n C-M-l send-keys "systemctl "
# bind-key -n C-M-m
bind-key -n C-M-n next-window
# bind-key -n C-M-o
bind-key -n C-M-p previous-window
# bind-key -n C-M-q
# bind-key -n C-M-r
# bind-key -n C-M-s
# bind-key -n C-M-t
# bind-key -n C-M-u
# bind-key -n C-M-v
bind-key -n C-M-w send-keys "0ivim `" Escape "A`"
# bind-key -n C-M-x
# bind-key -n C-M-y
# bind-key -n C-M-z

# bind-key -n M-Y send-keys ""
# bind-key -n M-Z send-keys ""

bind-key -n M-. send-keys "cd .." Enter
bind-key -n M-- send-keys "cd -" Enter
bind-key -n M-/ send-keys "/{" Enter "zf%"
bind-key -n C-Space resize-pane -Z
bind-key -n M-: command-prompt
bind-key -n M-& kill-window

bind-key M-v send-keys ":set nopaste | inoremap <C-j> <esc>/[(){}\"'\\[\\]>;:,.\\|\`]<CR>:nohl<CR>a | inoremap { {}<esc>i | inoremap {<CR> {<CR>}<ESC>O | inoremap ( ()<esc>i | inoremap [ []<esc>i | inoremap < < | inoremap <<tab> <><esc>i | inoremap (<tab> ()<CR>{<CR>}<esc>2kf(a | inoremap \"<tab> \"\"<esc>i | inoremap '<tab> ''<esc>i | inoremap `<tab> ``<esc>i" Enter
bind-key v send-keys ":set nonu | set nornu" Enter
bind-key V send-keys ":set nu | set rnu" Enter

# vim tab-switcher
bind-key -n M-1 send-keys "1gt"
bind-key -n M-2 send-keys "2gt"
bind-key -n M-3 send-keys "3gt"
bind-key -n M-4 send-keys "4gt"
bind-key -n M-5 send-keys "5gt"
bind-key -n M-6 send-keys "6gt"
bind-key -n M-7 send-keys "7gt"
bind-key -n M-8 send-keys "8gt"
bind-key -n M-9 send-keys "9gt"

bind-key -n F1 send-keys ":set paste" Enter
# bind-key -n F2 send-keys
bind-key -n F3 send-keys ":set nowrap" Enter
bind-key -n F4 send-keys ":set wrap" Enter
bind-key -n F5 send-keys ":set nonu | set nornu" Enter
bind-key -n F6 send-keys ":set nu | set rnu" Enter
# bind-key -n F7 send-keys
# bind-key -n F8 send-keys
# bind-key -n F9 send-keys 
# bind-key -n F10 send-keys 
bind-key -n F11 send-keys ":tabm-1" Enter
bind-key -n F12 send-keys ":tabm+1" Enter

